Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/22/20 16:14:29
example.asm						     Page 1 - 1


				;Translate upper case letters to lower case; don`t change lower
				; case letters and digits. Translate other characters to spaces.
				; Author:  MingkuanPang
				; Date:    11/22/2020    

				.586
				.MODEL FLAT
				 INCLUDE io.h
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 
				.STACK  4096            ; reserve 4096-byte stack
 00000000			.DATA	; reserve storage for data
 00000000 50 6C 65 61 73	strPrompt	BYTE	"Please enter a string ",0
	   65 20 65 6E 74
	   65 72 20 61 20
	   73 74 72 69 6E
	   67 20 00
 00000017 54 68 65 20 72	resultLbl	BYTE	"The result will be",0
	   65 73 75 6C 74
	   20 77 69 6C 6C
	   20 62 65 00
 0000002A  00000050 [		string		BYTE	80 DUP (?),0
	    00
	   ] 00
 0000007B  00000030 [		table		BYTE	48 DUP (' '), "0123456798", 7 DUP (' ')
	    20
	   ] 30 31 32 33
	   34 35 36 37 39
	   38
	   00000007 [
	    20
	   ]
 000000BC  61 62 63 64 65				BYTE	"abcdefghijklmnopqrstuvwxyz", 6 DUP (' ')
	   66 67 68 69 6A
	   6B 6C 6D 6E 6F
	   70 71 72 73 74
	   75 76 77 78 79
	   7A
	   00000006 [
	    20
	   ]
 000000DC  61 62 63 64 65				BYTE	"abcdefghijklmnopqrstuvwxyz", 133 DUP (' ')
	   66 67 68 69 6A
	   6B 6C 6D 6E 6F
	   70 71 72 73 74
	   75 76 77 78 79
	   7A
	   00000085 [
	    20
	   ]

				Tolower	MACRO	string
					lea		eax,string
					push	eax
					call	TolowerProc
					add		esp,4
					ENDM

				strLen	MACRO	string
					lea		eax,string
					push	eax
					call	strLenProc
					add		esp,4
					ENDM
 00000000			.CODE       
 00000000			_MainProc    PROC
					input		strPrompt,string,80
					Tolower		string
					output		resultLbl,string
 00000046  B8 00000000			mov			eax,0
 0000004B  C3				ret
 0000004C			_MainProc    ENDP

 0000004C			TolowerProc		PROC
 0000004C  55				push		ebp
 0000004D  8B EC			mov			ebp,esp
 0000004F  56				push		esi
 00000050  57				push		edi
 00000051  51				push		ecx
 00000052  50				push		eax
 00000053  53				push		ebx
 00000054  8D 1D 0000007B R		lea			ebx,table
 0000005A  8B 75 08			mov			esi,[ebp+8]
 0000005D  8B 7D 08			mov			edi,[ebp+8]
 00000060  56				push		esi
 00000061  E8 00000011			call		strLenProc
 00000066  83 C4 04			add			esp,4
 00000069  8B C8			mov			ecx,eax
					
 0000006B				TranslateChar:
 0000006B  AC				lodsb
 0000006C  D7				xlat
 0000006D  AA				stosb
 0000006E  E2 FB			loop	TranslateChar

 00000070				endOfProc:
 00000070  5B				pop			ebx
 00000071  58				pop			eax
 00000072  59				pop			ecx
 00000073  5F				pop			edi
 00000074  5E				pop			esi
 00000075  5D				pop			ebp
 00000076  C3				ret
 00000077			TolowerProc		ENDP


 00000077			strLenProc	PROC
 00000077  55				push	ebp
 00000078  8B EC			mov		ebp,esp
 0000007A  53				push	ebx
 0000007B  8B 5D 08			mov		ebx,[ebp+8]
 0000007E  B8 00000000			mov		eax,0
 00000083				countbytes:
 00000083  80 3B 00			cmp		BYTE PTR [ebx],0
 00000086  74 04			je		endcount
 00000088  40				inc		eax
 00000089  43				inc		ebx
 0000008A  EB F7			jmp		countbytes
 0000008C				endcount:
 0000008C  5B				pop		ebx
 0000008D  5D				pop		ebp
 0000008E  C3				ret
 0000008F			strlenProc	ENDP
				END
Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/22/20 16:14:29
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

Tolower  . . . . . . . . . . . .	Proc
atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
strLen . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000017B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 0000008F Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

TolowerProc  . . . . . . . . . .	P Near	 0000004C _TEXT	Length= 0000002B Public
  TranslateChar  . . . . . . . .	L Near	 0000006B _TEXT	
  endOfProc  . . . . . . . . . .	L Near	 00000070 _TEXT	
_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000004C Public
strLenProc . . . . . . . . . . .	P Near	 00000077 _TEXT	Length= 00000018 Public
  countbytes . . . . . . . . . .	L Near	 00000083 _TEXT	
  endcount . . . . . . . . . . .	L Near	 0000008C _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
resultLbl  . . . . . . . . . . .	Byte	 00000017 _DATA	
strPrompt  . . . . . . . . . . .	Byte	 00000000 _DATA	
string . . . . . . . . . . . . .	Byte	 0000002A _DATA	
table  . . . . . . . . . . . . .	Byte	 0000007B _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
