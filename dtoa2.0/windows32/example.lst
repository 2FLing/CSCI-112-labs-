Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/22/20 23:22:56
example.asm						     Page 1 - 1


				;dtoaProc(source,dest)
				;Convert double (source) to string of 11 characters at destination
				;address
				; Author:  MingkuanPang
				; Date:    11/22/2020    

				.586
				.MODEL FLAT
				 INCLUDE io.h
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 
				.STACK  4096            ; reserve 4096-byte stack
 00000000			.DATA	; reserve storage for data
 00000000  0000000B [		string		BYTE	11 DUP (?),0
	    00
	   ] 00
 0000000C 00000209		num			DWORD	521
 00000010 54 68 65 20 72	resultLbl	BYTE	"The result will be",0
	   65 73 75 6C 74
	   20 77 69 6C 6C
	   20 62 65 00

				dtoa	MACRO	source,dest
					push	eax
					lea		eax,dest
					push	eax
					mov		eax,[ebp+4]
					mov		eax,source
					push	eax
					call	dtocharProc
					add		esp,8
					pop		eax
					ENDM
 00000000			.CODE       
 00000000			_MainProc    PROC
					dtoa		num,string
					output		resultLbl,string
 00000033  B8 00000000			mov			eax,0
 00000038  C3				ret
 00000039			_MainProc    ENDP

 00000039			dtocharProc	PROC
 00000039  55				push	ebp
 0000003A  8B EC			mov		ebp,esp
 0000003C  57				push	edi
 0000003D  50				push	eax
 0000003E  53				push	ebx
 0000003F  51				push	ecx
 00000040  52				push	edx
 00000041  9C				pushfd
 00000042  8B 45 08			mov		eax,[ebp+8]
 00000045  3D 80000000			cmp		eax,80000000h
 0000004A  74 2F			je		Special
					
 0000004C				InicialString:
 0000004C  50				push	eax
 0000004D  B0 20			mov		al,' '

 0000004F				PutSpace:
 0000004F  8B 7D 0C			mov		edi,[ebp+12]
 00000052  B9 0000000A			mov		ecx,10
 00000057  FC				cld		
 00000058  F3/ AA			rep		stosb
 0000005A  58				pop		eax

 0000005B  BB 0000000A			mov		ebx,10
 00000060  B1 20			mov		cl,' '

 00000062  83 F8 00			cmp		eax,0
 00000065  7D 04			jge		Positive
 00000067  F7 D8			neg		eax
 00000069  B1 2D			mov		cl,'-'
					

 0000006B				Positive:
 0000006B  99				cdq
 0000006C  F7 F3			div		ebx
 0000006E  80 CA 30			or		dl,30h
 00000071  88 17			mov		BYTE PTR [edi],dl
 00000073  4F				dec		edi
 00000074  83 F8 00			cmp		eax,0
 00000077  74 30			je		endProc
 00000079  EB F0			jmp		Positive
 0000007B				Special:
 0000007B  8B 7D 0C			mov		edi,[ebp+12]
 0000007E  C6 07 2D			mov		BYTE PTR [edi],'-'
 00000081  C6 47 01 32			mov		BYTE PTR [edi+1],'2'
 00000085  C6 47 02 31			mov		BYTE PTR [edi+2],'1'
 00000089  C6 47 03 34			mov		BYTE PTR [edi+3],'4'
 0000008D  C6 47 04 37			mov		BYTE PTR [edi+4],'7'
 00000091  C6 47 05 34			mov		BYTE PTR [edi+5],'4'
 00000095  C6 47 06 38			mov		BYTE PTR [edi+6],'8'
 00000099  C6 47 07 33			mov		BYTE PTR [edi+7],'3'
 0000009D  C6 47 08 36			mov		BYTE PTR [edi+8],'6'
 000000A1  C6 47 09 34			mov		BYTE PTR [edi+9],'4'
 000000A5  C6 47 0A 37			mov		BYTE PTR [edi+10],'7'
 000000A9				endProc:
 000000A9  88 0F			mov		BYTE PTR [edi],cl
 000000AB  9D				popfd
 000000AC  5A				pop		edx
 000000AD  59				pop		ecx
 000000AE  5B				pop		ebx
 000000AF  58				pop		eax
 000000B0  5F				pop		edi
 000000B1  5D				pop		ebp
 000000B2  C3				ret
 000000B3			dtocharProc	ENDP

				END
Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/22/20 23:22:56
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000023 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000B3 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000039 Public
dtocharProc  . . . . . . . . . .	P Near	 00000039 _TEXT	Length= 0000007A Public
  InicialString  . . . . . . . .	L Near	 0000004C _TEXT	
  PutSpace . . . . . . . . . . .	L Near	 0000004F _TEXT	
  Positive . . . . . . . . . . .	L Near	 0000006B _TEXT	
  Special  . . . . . . . . . . .	L Near	 0000007B _TEXT	
  endProc  . . . . . . . . . . .	L Near	 000000A9 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
num  . . . . . . . . . . . . . .	DWord	 0000000C _DATA	
resultLbl  . . . . . . . . . . .	Byte	 00000010 _DATA	
string . . . . . . . . . . . . .	Byte	 00000000 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
