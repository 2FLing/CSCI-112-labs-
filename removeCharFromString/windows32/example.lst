Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/19/20 18:31:41
example.asm						     Page 1 - 1


				; Example assembly language program
				; This program will prmopts for and inputs 
				; a person`s name in the "lastname firstname"
				; format, there can be mutiple spaces separate the names
				; originally and there is no characters following the 
				; firstname and it will build the name in a new format
				; with "firstname lastname".
				; Author:  MingkuanPang
				; Date:    11/19/2020    

				.586
				.MODEL FLAT
				 INCLUDE io.h
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 
				.STACK  4096            ; reserve 4096-byte stack

 00000000			.DATA	; reserve storage for data
 00000000  00000050 [		string	BYTE	80	DUP (?)
	    00
	   ]
 00000050  00000005 [		char	BYTE	5	DUP (?)
	    00
	   ]
 00000055 50 6C 65 61 73	stringPrompt	BYTE	"Please enter a string:",0
	   65 20 65 6E 74
	   65 72 20 61 20
	   73 74 72 69 6E
	   67 3A 00
 0000006C 50 6C 65 61 73	charPrompt		BYTE	"Please enter the character that you want to remove",0
	   65 20 65 6E 74
	   65 72 20 74 68
	   65 20 63 68 61
	   72 61 63 74 65
	   72 20 74 68 61
	   74 20 79 6F 75
	   20 77 61 6E 74
	   20 74 6F 20 72
	   65 6D 6F 76 65
	   00
 0000009F 54 68 65 20 6E	resultLbl		BYTE	"The new string will be: ",0
	   65 77 20 73 74
	   72 69 6E 67 20
	   77 69 6C 6C 20
	   62 65 3A 20 00

				removeChar	MACRO	string,char
					mov		eax,0
					mov		al,char
					push	eax
					lea		eax,string
					push	eax
					call	removeCharProc
					add		esp,8
					ENDM

				strLen	MACRO	string
					lea		eax,string
					push	eax
					call	strLenProc
					add		esp,4
					ENDM
 00000000			.CODE       
 00000000			_MainProc    PROC
					input	stringPrompt,string,80
					input	charPrompt,char,5
					removeChar string,char
					output	resultLbl,string
 0000006F  B8 00000000			mov		eax,0
 00000074  C3				ret
 00000075			_MainProc    ENDP

 00000075			removeCharProc	PROC
 00000075  55				push	ebp
 00000076  8B EC			mov		ebp,esp
 00000078  56				push	esi
 00000079  57				push	edi
 0000007A  50				push	eax
 0000007B  8B 75 08			mov		esi,[ebp+8]
 0000007E  8B 7D 08			mov		edi,[ebp+8]
 00000081  8B 45 0C			mov		eax,[ebp+12]
 00000084				IfIsChar:
 00000084  80 3E 00			cmp		BYTE PTR [esi],0

 00000087  74 0E			jz		finishRemoving
 00000089  38 06			cmp		BYTE PTR [esi],al
 0000008B  74 03			jz		isChar

 0000008D				isNotChar:
 0000008D  A4				movsb
 0000008E  EB F4			jmp		IfIsChar

 00000090				isChar:
 00000090  46				inc		esi
 00000091  38 06			cmp		BYTE PTR [esi],al
 00000093  74 FB			jz		isChar
 00000095  EB ED			jmp		IfIsChar

 00000097				finishRemoving:
 00000097  C6 07 00			mov		BYTE PTR [edi],0
 0000009A  58				pop		eax
 0000009B  5F				pop		edi
 0000009C  5E				pop		esi
 0000009D  5D				pop		ebp
 0000009E  C3				ret
 0000009F			removeCharProc	ENDP

 0000009F			strLenProc	PROC
 0000009F  55				push	ebp
 000000A0  8B EC			mov		ebp,esp
 000000A2  53				push	ebx
 000000A3  8B 5D 08			mov		ebx,[ebp+8]
 000000A6  B8 00000000			mov		eax,0
 000000AB				countbytes:
 000000AB  80 3B 00			cmp		BYTE PTR [ebx],0
 000000AE  74 04			je		endcount
 000000B0  40				inc		eax
 000000B1  43				inc		ebx
 000000B2  EB F7			jmp		countbytes
 000000B4				endcount:
 000000B4  5B				pop		ebx
 000000B5  5D				pop		ebp
 000000B6  C3				ret
 000000B7			strlenProc	ENDP
				END
Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/19/20 18:31:41
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
removeChar . . . . . . . . . . .	Proc
strLen . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 000000B8 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000B7 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000075 Public
removeCharProc . . . . . . . . .	P Near	 00000075 _TEXT	Length= 0000002A Public
  IfIsChar . . . . . . . . . . .	L Near	 00000084 _TEXT	
  isNotChar  . . . . . . . . . .	L Near	 0000008D _TEXT	
  isChar . . . . . . . . . . . .	L Near	 00000090 _TEXT	
  finishRemoving . . . . . . . .	L Near	 00000097 _TEXT	
strLenProc . . . . . . . . . . .	P Near	 0000009F _TEXT	Length= 00000018 Public
  countbytes . . . . . . . . . .	L Near	 000000AB _TEXT	
  endcount . . . . . . . . . . .	L Near	 000000B4 _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
charPrompt . . . . . . . . . . .	Byte	 0000006C _DATA	
char . . . . . . . . . . . . . .	Byte	 00000050 _DATA	
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
resultLbl  . . . . . . . . . . .	Byte	 0000009F _DATA	
stringPrompt . . . . . . . . . .	Byte	 00000055 _DATA	
string . . . . . . . . . . . . .	Byte	 00000000 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
