Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/15/20 18:44:10
example.asm						     Page 1 - 1


				; Example assembly language program -- adds 158 to number in memory
				; Author:  MingkuanPang
				; Date:    11/12/2020    

				.586
				.MODEL FLAT
				 INCLUDE io.h
			      C ; IO.H -- header file for I/O macros (listing suppressed)
			      C .NOLIST      ; turn off listing
			      C .LIST        ; begin listing
			      C 
				.STACK  4096            ; reserve 4096-byte stack

 00000000			.DATA	; reserve storage for data
 00000000  00000400 [		byteArea	BYTE	1024 DUP(?)
	    00
	   ]
 00000400  00000050 [		stringIn	BYTE	80	DUP(?)
	    00
	   ]
 00000450 45 6E 74 65 72	prompt		BYTE	"Enter your string:",0
	   20 79 6F 75 72
	   20 73 74 72 69
	   6E 67 3A 00
 00000463 54 68 65 20 73	prompt2		BYTE	"The strings you entered were:",0
	   74 72 69 6E 67
	   73 20 79 6F 75
	   20 65 6E 74 65
	   72 65 64 20 77
	   65 72 65 3A 00
				cpyStrings	MACRO source,destination
						lea		eax,destination
						push	eax
						lea		eax,source
						push	eax
						call	cpyStringProc
						add		esp,8
						ENDM

 00000000			.CODE       
 00000000			_MainProc    PROC
 00000000				inputstr:
					input		prompt,stringIn,80
					cpyStrings	stringIn,byteArea
 00000034  80 3D 00000400 R		cmp			BYTE PTR stringIn[0],'$'
	   24
 0000003B  74 02			je			endinput
 0000003D  EB C1			jmp			inputstr
 0000003F				endinput:
					output		prompt2,byteArea
 00000058  B8 00000000			mov		eax,0
 0000005D  C3				ret
 0000005E			_MainProc    ENDP

 0000005E			cpyStringProc PROC
 0000005E  55				push	ebp
 0000005F  8B EC			mov		ebp,esp
 00000061  56				push	esi
 00000062  57				push	edi
 00000063  9C				pushfd
 00000064  8B 75 08			mov		esi,[ebp+8]
 00000067  8B 7D 0C			mov		edi,[ebp+12]
 0000006A  80 3E 24			cmp		BYTE PTR [esi],'$'
 0000006D  75 01			jne		skipnotnull
 0000006F  46				inc		esi
 00000070				skipnotnull:
 00000070  80 3F 00			cmp		BYTE PTR [edi],0
 00000073  74 03			je		startpoint
 00000075  47				inc		edi
 00000076  EB F8			jmp		skipnotnull
 00000078				startpoint:
 00000078  FC				cld
 00000079				cpystring:
 00000079  80 3E 00			cmp		BYTE PTR [esi],0
 0000007C  74 03			je		finishcopy
 0000007E  A4				movsb
 0000007F  EB F8			jmp		cpystring
 00000081				finishcopy:
 00000081  C7 07 0000000D		mov		DWORD PTR [edi],13
 00000087  47				inc		edi
 00000088  C7 07 0000000A		mov		DWORD PTR [edi],10
 0000008E  8B 75 08			mov		esi,[ebp+8]
 00000091  80 3E 24			cmp		BYTE PTR [esi],'$'
 00000094  74 02			je		addNull
 00000096  EB 04			jmp		quitcpy
 00000098				addNull:
 00000098  47				inc		edi
 00000099  C6 07 00			mov		BYTE PTR [edi],0
 0000009C				quitcpy:
 0000009C  9D				popfd
 0000009D  5F				pop		edi
 0000009E  5E				pop		esi
 0000009F  5D				pop		ebp
 000000A0  C3				ret
 000000A1			cpyStringProc	ENDP
				END
Microsoft (R) Macro Assembler Version 14.28.29333.0	    11/15/20 18:44:10
example.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

atod . . . . . . . . . . . . . .	Proc
atow . . . . . . . . . . . . . .	Proc
cpyStrings . . . . . . . . . . .	Proc
dtoa . . . . . . . . . . . . . .	Proc
input  . . . . . . . . . . . . .	Proc
output . . . . . . . . . . . . .	Proc
wtoa . . . . . . . . . . . . . .	Proc


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000481 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000000A1 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

_MainProc  . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000005E Public
  inputstr . . . . . . . . . . .	L Near	 00000000 _TEXT	
  endinput . . . . . . . . . . .	L Near	 0000003F _TEXT	
cpyStringProc  . . . . . . . . .	P Near	 0000005E _TEXT	Length= 00000043 Public
  skipnotnull  . . . . . . . . .	L Near	 00000070 _TEXT	
  startpoint . . . . . . . . . .	L Near	 00000078 _TEXT	
  cpystring  . . . . . . . . . .	L Near	 00000079 _TEXT	
  finishcopy . . . . . . . . . .	L Near	 00000081 _TEXT	
  addNull  . . . . . . . . . . .	L Near	 00000098 _TEXT	
  quitcpy  . . . . . . . . . . .	L Near	 0000009C _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000000h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
_getInput  . . . . . . . . . . .	L Near	 00000000 FLAT	External
_showOutput  . . . . . . . . . .	L Near	 00000000 FLAT	External
atodproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
atowproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
byteArea . . . . . . . . . . . .	Byte	 00000000 _DATA	
dtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External
prompt2  . . . . . . . . . . . .	Byte	 00000463 _DATA	
prompt . . . . . . . . . . . . .	Byte	 00000450 _DATA	
stringIn . . . . . . . . . . . .	Byte	 00000400 _DATA	
wtoaproc . . . . . . . . . . . .	L Near	 00000000 FLAT	External

	   0 Warnings
	   0 Errors
